// <auto-generated />
using System;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pregiato.API.Data;

#nullable disable

namespace Pregiato.API.Migrations
{
    [DbContext(typeof(ModelAgencyContext))]
    partial class ModelAgencyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pregiato.API.DTO.ContractDTO", b =>
                {
                    b.Property<byte[]>("Content")
                        .HasColumnType("bytea");

                    b.Property<string>("ContractFilePath")
                        .HasColumnType("text");

                    b.Property<Guid?>("ContractId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModelId")
                        .HasColumnType("uuid");

                    b.Property<int?>("ProposalCode")
                        .HasColumnType("integer");

                    b.ToTable("ContractDTO");
                });

            modelBuilder.Entity("Pregiato.API.Models.ContractBase", b =>
                {
                    b.Property<Guid>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodProducers")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("CodProposta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(110);

                    b.Property<byte[]>("Content")
                        .HasColumnType("bytea");

                    b.Property<string>("ContractFilePath")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DataContrato")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModelIdModel")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uuid");

                    b.Property<string>("StatusContratc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("ValorContrato")
                        .HasColumnType("numeric");

                    b.Property<string>("VigenciaContrato")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ContractId");

                    b.HasIndex("ModelId");

                    b.HasIndex("ModelIdModel");

                    b.ToTable("Contracts", (string)null);

                    b.HasDiscriminator().HasValue("ContractBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Pregiato.API.Models.Job", b =>
                {
                    b.Property<Guid>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("IdModel")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("JobDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("JobId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Pregiato.API.Models.Model", b =>
                {
                    b.Property<Guid>("IdModel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodProducers")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<JsonDocument>("DNA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("jsonb")
                        .HasDefaultValueSql("'{}'::jsonb");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumberAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("TelefonePrincipal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefoneSecundario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("IdModel");

                    b.HasIndex("CPF");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("Pregiato.API.Models.ModelJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalDescription")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdJob")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdModel")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("JobDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IdJob");

                    b.HasIndex("IdModel");

                    b.ToTable("ModelJobs");
                });

            modelBuilder.Entity("Pregiato.API.Models.ModelsBilling", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdModel")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Amount");

                    b.HasIndex("IdModel")
                        .IsUnique();

                    b.ToTable("ModelsBilling");
                });

            modelBuilder.Entity("Pregiato.API.Models.Payment", b =>
                {
                    b.Property<Guid>("ContractId")
                        .HasColumnType("uuid");

                    b.Property<string>("AutorizationNumber")
                        .HasColumnType("text");

                    b.Property<string>("CodProducers")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<byte[]>("Comprovante")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataAcordoPagamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FinalCartao")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("MetodoPagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("QuantidadeParcela")
                        .HasColumnType("integer");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("ContractId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.Producers", b =>
                {
                    b.Property<Guid>("IdProducer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AmountContract")
                        .HasColumnType("numeric");

                    b.Property<string>("CodProducers")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("CodProposal")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("NOW()");

                    b.Property<Guid>("IdContract")
                        .HasColumnType("uuid");

                    b.Property<string>("InfoModel")
                        .HasColumnType("jsonb");

                    b.Property<string>("NameProducer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusContratc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalAgreements")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedAt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("ValidityContract")
                        .HasColumnType("text");

                    b.HasKey("IdProducer");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("Pregiato.API.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodProducers")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("CodProducers");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pregiato.API.Models.AgencyContract", b =>
                {
                    b.HasBaseType("Pregiato.API.Models.ContractBase");

                    b.ToTable("Contracts", (string)null);

                    b.HasDiscriminator().HasValue("AgencyContract");
                });

            modelBuilder.Entity("Pregiato.API.Models.CommitmentTerm", b =>
                {
                    b.HasBaseType("Pregiato.API.Models.ContractBase");

                    b.ToTable("Contracts", (string)null);

                    b.HasDiscriminator().HasValue("CommitmentTerm");
                });

            modelBuilder.Entity("Pregiato.API.Models.ImageRightsTerm", b =>
                {
                    b.HasBaseType("Pregiato.API.Models.ContractBase");

                    b.ToTable("Contracts", (string)null);

                    b.HasDiscriminator().HasValue("ImageRightsTerm");
                });

            modelBuilder.Entity("Pregiato.API.Models.PhotographyProductionContract", b =>
                {
                    b.HasBaseType("Pregiato.API.Models.ContractBase");

                    b.ToTable("Contracts", (string)null);

                    b.HasDiscriminator().HasValue("PhotographyProductionContract");
                });

            modelBuilder.Entity("Pregiato.API.Models.PhotographyProductionContractMinority", b =>
                {
                    b.HasBaseType("Pregiato.API.Models.ContractBase");

                    b.ToTable("Contracts", (string)null);

                    b.HasDiscriminator().HasValue("PhotographyProductionContractMinority");
                });

            modelBuilder.Entity("Pregiato.API.Models.ContractBase", b =>
                {
                    b.HasOne("Pregiato.API.Models.ContractBase", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pregiato.API.Models.Model", "Model")
                        .WithMany("Contracts")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pregiato.API.Models.Model", null)
                        .WithMany("Contract")
                        .HasForeignKey("ModelIdModel");

                    b.Navigation("Contract");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Pregiato.API.Models.ModelJob", b =>
                {
                    b.HasOne("Pregiato.API.Models.Job", "Job")
                        .WithMany("ModelJobs")
                        .HasForeignKey("IdJob")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pregiato.API.Models.Model", "Model")
                        .WithMany("ModelJobs")
                        .HasForeignKey("IdModel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Pregiato.API.Models.ModelsBilling", b =>
                {
                    b.HasOne("Pregiato.API.Models.Model", "Model")
                        .WithOne("ModelsBilling")
                        .HasForeignKey("Pregiato.API.Models.ModelsBilling", "IdModel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Pregiato.API.Models.Payment", b =>
                {
                    b.HasOne("Pregiato.API.Models.ContractBase", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Pregiato.API.Models.ContractBase", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Pregiato.API.Models.Job", b =>
                {
                    b.Navigation("ModelJobs");
                });

            modelBuilder.Entity("Pregiato.API.Models.Model", b =>
                {
                    b.Navigation("Contract");

                    b.Navigation("Contracts");

                    b.Navigation("ModelJobs");

                    b.Navigation("ModelsBilling")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
