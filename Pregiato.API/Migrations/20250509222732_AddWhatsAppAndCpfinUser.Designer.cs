// <auto-generated />
using System;
using System.Collections.Generic;
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pregiato.API.Data;
using Pregiato.API.Models;

#nullable disable

namespace Pregiato.API.Migrations
{
    [DbContext(typeof(ModelAgencyContext))]
    [Migration("20250509222732_AddWhatsAppAndCpfinUser")]
    partial class AddWhatsAppAndCpfinUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pregiato.API.Models.Certificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("IdModel")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte[]>("PdfBytes")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IdModel", "TrainingId")
                        .IsUnique();

                    b.ToTable("Certificates", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.ContractBase", b =>
                {
                    b.Property<Guid>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodProducers")
                        .HasColumnType("text");

                    b.Property<int>("CodProposta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(400);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("ContractFilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContractType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DataContrato")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("IdModel")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uuid");

                    b.Property<string>("StatusContratc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal>("ValorContrato")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("VigenciaContrato")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ContractId");

                    b.ToTable("Contracts", (string)null);

                    b.HasDiscriminator<string>("ContractType").HasValue("ContractBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Pregiato.API.Models.CourseReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<List<CommentEntry>>("Comments")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Feedback")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid>("IdModel")
                        .HasColumnType("uuid");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("CourseReviews", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.Job", b =>
                {
                    b.Property<Guid>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("JobDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<Guid>("PartnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Partnership")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("JobId");

                    b.ToTable("Jobs", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Dislikes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<int>("Likes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uuid");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("Lessons", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.LessonProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("IdModel")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uuid");

                    b.Property<double>("PercentageWatched")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("ViewedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("LessonProgresses", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.Model", b =>
                {
                    b.Property<Guid>("IdModel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("ModelId")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodProducers")
                        .HasColumnType("text");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<JsonDocument>("DNA")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("DateOfBirth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumberAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("TelefonePrincipal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefoneSecundario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("IdModel");

                    b.HasIndex("CPF");

                    b.ToTable("Models", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.ModelJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("AdditionalDescription")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("JobDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uuid");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Time")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("ModelJob", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.ModelPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ContentType")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("content_type");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("image_data");

                    b.Property<string>("ImageName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("image_name");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uuid")
                        .HasColumnName("model_id");

                    b.Property<DateTime>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("uploaded_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("model_photos", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.ModelsBilling", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("IdModel")
                        .HasColumnType("uuid");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("ModelsBilling", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.PasswordReset", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("ExpiresAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Used")
                        .HasColumnType("boolean");

                    b.Property<string>("VerificationCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("VerificationCode");

                    b.Property<string>("WhatsApp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("PasswordReset", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AutorizationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodProducers")
                        .HasColumnType("text");

                    b.Property<byte[]>("Comprovante")
                        .HasColumnType("bytea");

                    b.Property<Guid?>("ContractId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAcordoPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DataPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("FinalCartao")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("MetodoPagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Provider")
                        .HasColumnType("text");

                    b.Property<int>("QuantidadeParcela")
                        .HasColumnType("integer");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.Producers", b =>
                {
                    b.Property<string>("CodProducers")
                        .HasColumnType("text");

                    b.Property<decimal>("AmountContract")
                        .HasColumnType("numeric");

                    b.Property<int>("CodProposal")
                        .HasColumnType("integer");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("InfoModel")
                        .HasColumnType("jsonb");

                    b.Property<string>("NameProducer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusContratc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalAgreements")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("ValidityContract")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CodProducers");

                    b.ToTable("Producers", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("InstructorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.ToTable("Trainings", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("CodProducers")
                        .HasColumnType("text");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WhatsApp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("CodProducers");

                    b.HasIndex("Name");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Pregiato.API.Models.AgencyContract", b =>
                {
                    b.HasBaseType("Pregiato.API.Models.ContractBase");

                    b.HasDiscriminator().HasValue("Agency");
                });

            modelBuilder.Entity("Pregiato.API.Models.CommitmentTerm", b =>
                {
                    b.HasBaseType("Pregiato.API.Models.ContractBase");

                    b.HasDiscriminator().HasValue("Commitment");
                });

            modelBuilder.Entity("Pregiato.API.Models.ImageRightsTerm", b =>
                {
                    b.HasBaseType("Pregiato.API.Models.ContractBase");

                    b.HasDiscriminator().HasValue("ImageRights");
                });

            modelBuilder.Entity("Pregiato.API.Models.PhotographyProductionContract", b =>
                {
                    b.HasBaseType("Pregiato.API.Models.ContractBase");

                    b.HasDiscriminator().HasValue("PhotographyProduction");
                });

            modelBuilder.Entity("Pregiato.API.Models.PhotographyProductionContractMinority", b =>
                {
                    b.HasBaseType("Pregiato.API.Models.ContractBase");

                    b.HasDiscriminator().HasValue("PhotographyMinority");
                });

            modelBuilder.Entity("Pregiato.API.Models.Lesson", b =>
                {
                    b.HasOne("Pregiato.API.Models.Training", null)
                        .WithMany("Lessons")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pregiato.API.Models.Training", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
